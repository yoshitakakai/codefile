/* 基本スタイル */
ul {
    margin-top: 20%;
    list-style-type: none;
}

.Header {
    position: relative;
    z-index: 3;
}

.Nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 20px;
    background-color: #fff;
}

/* 通常の横並びメニュー */
.GlobalMenu {
    display: none;
    list-style: none;
    padding: 0;
    margin: 0;
}

.GlobalMenu li {
    display: inline-block;
    margin: 0 10px;
}

.GlobalMenu li a {
    text-decoration: none;
    color: #333;
    font-weight: bold;
}

/* ハンバーガーメニュー */
.HamburgerMenu {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
}

/* メニューボタンを右上に配置 */
.MenuButton {
    border: none;
    background-color: transparent;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    gap: 5px;
    position: fixed; /* 固定配置 */
    top: 20px; /* 上からの距離 */
    right: 20px; /* 右からの距離 */
    z-index: 5; /* バツ印が他の要素に隠れないようにする */
}

.MenuButton span {
    display: block;
    width: 30px;
    height: 3px;
    background-color: #333;
    transition: transform 0.3s ease, opacity 0.3s ease;
}

/* バツ印が出る時のアニメーション */
.MenuButton.active span:nth-child(1) {
    transform: translateY(8px) rotate(45deg);
}

.MenuButton.active span:nth-child(2) {
    opacity: 0;
}

.MenuButton.active span:nth-child(3) {
    transform: translateY(-8px) rotate(-45deg);
}

/* 1024px以上のデバイスでは横並びメニューを表示 */
@media (min-width: 1024px) {
    ul li a {
        font-size: 2em;
    }

    .GlobalMenu {
        display: flex;
    }
    .HamburgerMenu {
        display: none;
    }
}

ul li a {
    font-size: 1.5em;
}

/* メニューのトランジションを追加 */
.Menu {
    position: fixed;
    top: 0;
    left: -100%;  /* 初期状態で画面外に */
    width: 70%;
    height: 100%;
    background: #fff;
    z-index: 2;
    opacity: 0; /* 初期状態で非表示 */
    transition: left 0.5s ease, opacity 0.5s ease;  /*スライドインとフェードインを同時に */
    /* opacity 0.5s ease;  スライドインとフェードインを同時に（フェードインのみ） */
}

ul.Menu {
    padding: 0;
    margin-left: 7%;
}

/* メニューが開いた状態のスタイル */
.MenuIsOpen {
    left: 0;
    opacity: 1; /* メニューが表示された時にオパシティを1にして表示 */
}

/* オーバーレイのフェードイン・フェードアウト */
.Overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #fff;
    visibility: hidden;
    opacity: 0;
    transition: opacity 0.5s ease, visibility 0.5s ease; /* 0.5秒でフェードイン・フェードアウト */
}

/* オーバーレイが表示された状態 */
.OverlayIsOpen {
    visibility: visible;
    opacity: 1;
}
